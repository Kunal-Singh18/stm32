
13_timer_output_compare.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001b8  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000360  08000368  00010368  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000360  08000360  00010368  2**0
                  CONTENTS
  4 .ARM          00000000  08000360  08000360  00010368  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000360  08000368  00010368  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000360  08000360  00010360  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000364  08000364  00010364  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010368  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010368  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010368  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00010398  2**0
                  CONTENTS, READONLY
 14 .debug_info   0000049a  00000000  00000000  000103db  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00000124  00000000  00000000  00010875  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000070  00000000  00000000  000109a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000046  00000000  00000000  00010a10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00000d7c  00000000  00000000  00010a56  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00000c70  00000000  00000000  000117d2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0008bb85  00000000  00000000  00012442  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  000000a8  00000000  00000000  0009dfc8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000048  00000000  00000000  0009e070  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000348 	.word	0x08000348

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000348 	.word	0x08000348

080001e8 <main>:




int main(void)
{/*our led pin PD12 is connected to TIM4 CH1 so we need to change accordngly for this exercise.
 80001e8:	b580      	push	{r7, lr}
 80001ea:	af00      	add	r7, sp, #0
we will make changes in timer.c*/

	tim4_pd12_output_compare();
 80001ec:	f000 f802 	bl	80001f4 <tim4_pd12_output_compare>


	while(1)
 80001f0:	e7fe      	b.n	80001f0 <main+0x8>
	...

080001f4 <tim4_pd12_output_compare>:
	// enable timer
	TIM3->CR1 =CR1_CEN;

}
void tim4_pd12_output_compare(void)
{
 80001f4:	b480      	push	{r7}
 80001f6:	af00      	add	r7, sp, #0
	/*enable clock access to GPIOD*/
	RCC->AHB1ENR |=GPIODEN;
 80001f8:	4b28      	ldr	r3, [pc, #160]	; (800029c <tim4_pd12_output_compare+0xa8>)
 80001fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001fc:	4a27      	ldr	r2, [pc, #156]	; (800029c <tim4_pd12_output_compare+0xa8>)
 80001fe:	f043 0308 	orr.w	r3, r3, #8
 8000202:	6313      	str	r3, [r2, #48]	; 0x30

	/*set pin mode as ALTERNATE type*/
	GPIOD->MODER &= ~(1U<<24);
 8000204:	4b26      	ldr	r3, [pc, #152]	; (80002a0 <tim4_pd12_output_compare+0xac>)
 8000206:	681b      	ldr	r3, [r3, #0]
 8000208:	4a25      	ldr	r2, [pc, #148]	; (80002a0 <tim4_pd12_output_compare+0xac>)
 800020a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800020e:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= (1U<<25);
 8000210:	4b23      	ldr	r3, [pc, #140]	; (80002a0 <tim4_pd12_output_compare+0xac>)
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	4a22      	ldr	r2, [pc, #136]	; (80002a0 <tim4_pd12_output_compare+0xac>)
 8000216:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800021a:	6013      	str	r3, [r2, #0]

	/*set alternate function type as TIM4 CH1 AF02*/
	GPIOD->AFR[1] &=~(1U<<16);
 800021c:	4b20      	ldr	r3, [pc, #128]	; (80002a0 <tim4_pd12_output_compare+0xac>)
 800021e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000220:	4a1f      	ldr	r2, [pc, #124]	; (80002a0 <tim4_pd12_output_compare+0xac>)
 8000222:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000226:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOD->AFR[1] |=(1U<<17);
 8000228:	4b1d      	ldr	r3, [pc, #116]	; (80002a0 <tim4_pd12_output_compare+0xac>)
 800022a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800022c:	4a1c      	ldr	r2, [pc, #112]	; (80002a0 <tim4_pd12_output_compare+0xac>)
 800022e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000232:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOD->AFR[1] &=~(1U<<18);
 8000234:	4b1a      	ldr	r3, [pc, #104]	; (80002a0 <tim4_pd12_output_compare+0xac>)
 8000236:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000238:	4a19      	ldr	r2, [pc, #100]	; (80002a0 <tim4_pd12_output_compare+0xac>)
 800023a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800023e:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOD->AFR[1] &=~(1U<<19);
 8000240:	4b17      	ldr	r3, [pc, #92]	; (80002a0 <tim4_pd12_output_compare+0xac>)
 8000242:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000244:	4a16      	ldr	r2, [pc, #88]	; (80002a0 <tim4_pd12_output_compare+0xac>)
 8000246:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 800024a:	6253      	str	r3, [r2, #36]	; 0x24

	//enable clock access
	RCC->APB1ENR = TIM4EN;
 800024c:	4b13      	ldr	r3, [pc, #76]	; (800029c <tim4_pd12_output_compare+0xa8>)
 800024e:	2204      	movs	r2, #4
 8000250:	641a      	str	r2, [r3, #64]	; 0x40

	// set prescaler value
	TIM4->PSC = 160000-1;  //   16000000 / 1600 = 10000
 8000252:	4b14      	ldr	r3, [pc, #80]	; (80002a4 <tim4_pd12_output_compare+0xb0>)
 8000254:	4a14      	ldr	r2, [pc, #80]	; (80002a8 <tim4_pd12_output_compare+0xb4>)
 8000256:	629a      	str	r2, [r3, #40]	; 0x28
	// set auto reload value
	TIM4->ARR = 10000 -1; // 10000/10000 = 1;
 8000258:	4b12      	ldr	r3, [pc, #72]	; (80002a4 <tim4_pd12_output_compare+0xb0>)
 800025a:	f242 720f 	movw	r2, #9999	; 0x270f
 800025e:	62da      	str	r2, [r3, #44]	; 0x2c

	/*set output compare toggle mode*/
	TIM4->CCMR1 |=(1U<<4);
 8000260:	4b10      	ldr	r3, [pc, #64]	; (80002a4 <tim4_pd12_output_compare+0xb0>)
 8000262:	699b      	ldr	r3, [r3, #24]
 8000264:	4a0f      	ldr	r2, [pc, #60]	; (80002a4 <tim4_pd12_output_compare+0xb0>)
 8000266:	f043 0310 	orr.w	r3, r3, #16
 800026a:	6193      	str	r3, [r2, #24]
	TIM4->CCMR1 |=(1U<<5);
 800026c:	4b0d      	ldr	r3, [pc, #52]	; (80002a4 <tim4_pd12_output_compare+0xb0>)
 800026e:	699b      	ldr	r3, [r3, #24]
 8000270:	4a0c      	ldr	r2, [pc, #48]	; (80002a4 <tim4_pd12_output_compare+0xb0>)
 8000272:	f043 0320 	orr.w	r3, r3, #32
 8000276:	6193      	str	r3, [r2, #24]

	/*enable tim4 ch1 in compare mode*/
	TIM4->CCER |=CCER_CC1E;
 8000278:	4b0a      	ldr	r3, [pc, #40]	; (80002a4 <tim4_pd12_output_compare+0xb0>)
 800027a:	6a1b      	ldr	r3, [r3, #32]
 800027c:	4a09      	ldr	r2, [pc, #36]	; (80002a4 <tim4_pd12_output_compare+0xb0>)
 800027e:	f043 0301 	orr.w	r3, r3, #1
 8000282:	6213      	str	r3, [r2, #32]


	// clear counter
	TIM4->CNT =0;
 8000284:	4b07      	ldr	r3, [pc, #28]	; (80002a4 <tim4_pd12_output_compare+0xb0>)
 8000286:	2200      	movs	r2, #0
 8000288:	625a      	str	r2, [r3, #36]	; 0x24
	// enable timer
	TIM4->CR1 =CR1_CEN;
 800028a:	4b06      	ldr	r3, [pc, #24]	; (80002a4 <tim4_pd12_output_compare+0xb0>)
 800028c:	2201      	movs	r2, #1
 800028e:	601a      	str	r2, [r3, #0]

}
 8000290:	bf00      	nop
 8000292:	46bd      	mov	sp, r7
 8000294:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000298:	4770      	bx	lr
 800029a:	bf00      	nop
 800029c:	40023800 	.word	0x40023800
 80002a0:	40020c00 	.word	0x40020c00
 80002a4:	40000800 	.word	0x40000800
 80002a8:	000270ff 	.word	0x000270ff

080002ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002ac:	480d      	ldr	r0, [pc, #52]	; (80002e4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ae:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002b0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002b4:	480c      	ldr	r0, [pc, #48]	; (80002e8 <LoopForever+0x6>)
  ldr r1, =_edata
 80002b6:	490d      	ldr	r1, [pc, #52]	; (80002ec <LoopForever+0xa>)
  ldr r2, =_sidata
 80002b8:	4a0d      	ldr	r2, [pc, #52]	; (80002f0 <LoopForever+0xe>)
  movs r3, #0
 80002ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002bc:	e002      	b.n	80002c4 <LoopCopyDataInit>

080002be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002c2:	3304      	adds	r3, #4

080002c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002c8:	d3f9      	bcc.n	80002be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ca:	4a0a      	ldr	r2, [pc, #40]	; (80002f4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002cc:	4c0a      	ldr	r4, [pc, #40]	; (80002f8 <LoopForever+0x16>)
  movs r3, #0
 80002ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002d0:	e001      	b.n	80002d6 <LoopFillZerobss>

080002d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002d4:	3204      	adds	r2, #4

080002d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002d8:	d3fb      	bcc.n	80002d2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002da:	f000 f811 	bl	8000300 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002de:	f7ff ff83 	bl	80001e8 <main>

080002e2 <LoopForever>:

LoopForever:
  b LoopForever
 80002e2:	e7fe      	b.n	80002e2 <LoopForever>
  ldr   r0, =_estack
 80002e4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002ec:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002f0:	08000368 	.word	0x08000368
  ldr r2, =_sbss
 80002f4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002f8:	2000001c 	.word	0x2000001c

080002fc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002fc:	e7fe      	b.n	80002fc <ADC_IRQHandler>
	...

08000300 <__libc_init_array>:
 8000300:	b570      	push	{r4, r5, r6, lr}
 8000302:	4d0d      	ldr	r5, [pc, #52]	; (8000338 <__libc_init_array+0x38>)
 8000304:	4c0d      	ldr	r4, [pc, #52]	; (800033c <__libc_init_array+0x3c>)
 8000306:	1b64      	subs	r4, r4, r5
 8000308:	10a4      	asrs	r4, r4, #2
 800030a:	2600      	movs	r6, #0
 800030c:	42a6      	cmp	r6, r4
 800030e:	d109      	bne.n	8000324 <__libc_init_array+0x24>
 8000310:	4d0b      	ldr	r5, [pc, #44]	; (8000340 <__libc_init_array+0x40>)
 8000312:	4c0c      	ldr	r4, [pc, #48]	; (8000344 <__libc_init_array+0x44>)
 8000314:	f000 f818 	bl	8000348 <_init>
 8000318:	1b64      	subs	r4, r4, r5
 800031a:	10a4      	asrs	r4, r4, #2
 800031c:	2600      	movs	r6, #0
 800031e:	42a6      	cmp	r6, r4
 8000320:	d105      	bne.n	800032e <__libc_init_array+0x2e>
 8000322:	bd70      	pop	{r4, r5, r6, pc}
 8000324:	f855 3b04 	ldr.w	r3, [r5], #4
 8000328:	4798      	blx	r3
 800032a:	3601      	adds	r6, #1
 800032c:	e7ee      	b.n	800030c <__libc_init_array+0xc>
 800032e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000332:	4798      	blx	r3
 8000334:	3601      	adds	r6, #1
 8000336:	e7f2      	b.n	800031e <__libc_init_array+0x1e>
 8000338:	08000360 	.word	0x08000360
 800033c:	08000360 	.word	0x08000360
 8000340:	08000360 	.word	0x08000360
 8000344:	08000364 	.word	0x08000364

08000348 <_init>:
 8000348:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800034a:	bf00      	nop
 800034c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800034e:	bc08      	pop	{r3}
 8000350:	469e      	mov	lr, r3
 8000352:	4770      	bx	lr

08000354 <_fini>:
 8000354:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000356:	bf00      	nop
 8000358:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800035a:	bc08      	pop	{r3}
 800035c:	469e      	mov	lr, r3
 800035e:	4770      	bx	lr
